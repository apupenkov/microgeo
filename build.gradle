plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'com.palantir.docker' version '0.34.0'
}

group = 'org.rangiffler'
version = '0.0.3-SNAPSHOT'

repositories {
	mavenCentral()
}

sourceSets {
	main {
		java {
			srcDir 'src/main/java'
		}
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

docker {
	dependsOn build
	name "fireoldbeard/rangiffler-geo:${project.version}"
	tag 'latest', 'fireoldbeard/rangiffler-geo:latest'
	files bootJar.archiveFile
	buildArgs([APP_VER: project.version, DOCKER: project.ext.dockerImage])
	noCache true
}

task dockerRmi(type: Exec) {
	workingDir "${buildDir}"
	commandLine 'bash', '-c', "docker rmi -f \$(docker images | grep 'rangiffler')\n"
}

tasks.named('bootJar') {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('test') {
	useJUnitPlatform()
}
